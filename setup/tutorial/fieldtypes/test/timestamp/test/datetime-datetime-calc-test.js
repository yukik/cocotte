//require('../../../../global.js');

/*
 * 日時型の計算をテスト
 */

var assert = require('assert')
  , dt = require('../../lib/fieldtype/datetime/datetime')
  , prop = dt.getProperties();


console.dir(prop);


/*
 *		String　端数のでない時刻に設定
 *			now    : 行作成日時
 *			hours  : 行作成時の一番近いx時00分。
 *			half   : 行作成時の一番近いx時00分またはx時30分
 *			quarter: 行作成時の一番近いx時00分,x時15分,x時30分,x時45分
 *			ten    : 行作成時の一番近いx時00分,10分,20分,30分,40分,50分
 *			minutes: 行作成時の一番近いx時x分0秒
 *			
 *			文字列の前に数字を入れると計算対象を行作成時から間隔分ずらす事が出来る
 *			例）10:27:30に行を作成し既定値が2tenだった場合、基準10:47:30 => 10:50
 *			
 *			文字列の後ろに追加する記号により次のように既定値がかわる
 *			何も追加しないと前後の一番近い時刻。+では基準時刻より後、-では基準時刻より前
 */

describe ('テスト', function () {



	it ('calcDateTime', function () {

		var test = [
			//hours
			['2013-6-7 10:00',   'hours',  '2013-06-07 10:00']
		  , ['2013-6-7 10:00',   'hours+', '2013-06-07 10:00']
		  , ['2013-6-7 10:00',   'hours-', '2013-06-07 10:00']
		  , ['2013-6-7 10:00',  '1hours',  '2013-06-07 11:00']
		  , ['2013-6-7 10:00',  '1hours+', '2013-06-07 11:00']
		  , ['2013-6-7 10:00',  '1hours-', '2013-06-07 11:00']
		  , ['2013-6-7 10:00', '-1hours',  '2013-06-07 9:00']
		  , ['2013-6-7 10:00', '-1hours+', '2013-06-07 9:00']
		  , ['2013-6-7 10:00', '-1hours-', '2013-06-07 9:00']

		  , ['2013-6-7 10:10',   'hours',  '2013-06-07 10:00']
		  , ['2013-6-7 10:10',   'hours+', '2013-06-07 11:00']
		  , ['2013-6-7 10:10',   'hours-', '2013-06-07 10:00']
		  , ['2013-6-7 10:10',  '1hours',  '2013-06-07 11:00']
		  , ['2013-6-7 10:10',  '1hours+', '2013-06-07 12:00']
		  , ['2013-6-7 10:10',  '1hours-', '2013-06-07 11:00']
		  , ['2013-6-7 10:10', '-1hours',  '2013-06-07 9:00']
		  , ['2013-6-7 10:10', '-1hours+', '2013-06-07 10:00']
		  , ['2013-6-7 10:10', '-1hours-', '2013-06-07 9:00']

		  , ['2013-6-7 10:30',   'hours',  '2013-06-07 11:00']
		  , ['2013-6-7 10:30',   'hours+', '2013-06-07 11:00']
		  , ['2013-6-7 10:30',   'hours-', '2013-06-07 10:00']
		  , ['2013-6-7 10:30',  '1hours',  '2013-06-07 12:00']
		  , ['2013-6-7 10:30',  '1hours+', '2013-06-07 12:00']
		  , ['2013-6-7 10:30',  '1hours-', '2013-06-07 11:00']
		  , ['2013-6-7 10:30', '-1hours',  '2013-06-07 10:00']
		  , ['2013-6-7 10:30', '-1hours+', '2013-06-07 10:00']
		  , ['2013-6-7 10:30', '-1hours-', '2013-06-07 9:00']

		  , ['2013-6-7 10:50',   'hours',  '2013-06-07 11:00']
		  , ['2013-6-7 10:50',   'hours+', '2013-06-07 11:00']
		  , ['2013-6-7 10:50',   'hours-', '2013-06-07 10:00']
		  , ['2013-6-7 10:50',  '1hours',  '2013-06-07 12:00']
		  , ['2013-6-7 10:50',  '1hours+', '2013-06-07 12:00']
		  , ['2013-6-7 10:50',  '1hours-', '2013-06-07 11:00']
		  , ['2013-6-7 10:50', '-1hours',  '2013-06-07 10:00']
		  , ['2013-6-7 10:50', '-1hours+', '2013-06-07 10:00']
		  , ['2013-6-7 10:50', '-1hours-', '2013-06-07 9:00']

			//half
		  , ['2013-6-7 10:00',   'half',  '2013-06-07 10:00']
		  , ['2013-6-7 10:00',   'half+', '2013-06-07 10:00']
		  , ['2013-6-7 10:00',   'half-', '2013-06-07 10:00']
		  , ['2013-6-7 10:00',  '1half',  '2013-06-07 10:30']
		  , ['2013-6-7 10:00',  '1half+', '2013-06-07 10:30']
		  , ['2013-6-7 10:00',  '1half-', '2013-06-07 10:30']
		  , ['2013-6-7 10:00', '-1half',  '2013-06-07 9:30']
		  , ['2013-6-7 10:00', '-1half+', '2013-06-07 9:30']
		  , ['2013-6-7 10:00', '-1half-', '2013-06-07 9:30']

		  , ['2013-6-7 10:10',   'half',  '2013-06-07 10:00']
		  , ['2013-6-7 10:10',   'half+', '2013-06-07 10:30']
		  , ['2013-6-7 10:10',   'half-', '2013-06-07 10:00']
		  , ['2013-6-7 10:10',  '1half',  '2013-06-07 10:30']
		  , ['2013-6-7 10:10',  '1half+', '2013-06-07 11:00']
		  , ['2013-6-7 10:10',  '1half-', '2013-06-07 10:30']
		  , ['2013-6-7 10:10', '-1half',  '2013-06-07 9:30']
		  , ['2013-6-7 10:10', '-1half+', '2013-06-07 10:00']
		  , ['2013-6-7 10:10', '-1half-', '2013-06-07 9:30']

		  , ['2013-6-7 10:15',   'half',  '2013-06-07 10:30']
		  , ['2013-6-7 10:15',   'half+', '2013-06-07 10:30']
		  , ['2013-6-7 10:15',   'half-', '2013-06-07 10:00']
		  , ['2013-6-7 10:15',  '1half',  '2013-06-07 11:00']
		  , ['2013-6-7 10:15',  '1half+', '2013-06-07 11:00']
		  , ['2013-6-7 10:15',  '1half-', '2013-06-07 10:30']
		  , ['2013-6-7 10:15', '-1half',  '2013-06-07 10:00']
		  , ['2013-6-7 10:15', '-1half+', '2013-06-07 10:00']
		  , ['2013-6-7 10:15', '-1half-', '2013-06-07 9:30']

		];

		test.forEach(function(ts) {

			var c = dt.calc(prop, ts[1], ts[0]);
			var x = c ? c.valueOf() : null;
			var y = ts[2] ? new Date(ts[2]).valueOf() : null;

			if (x !== y) {
				console.log(ts);
				console.log(c);
			}

			assert.equal(x, y);

		});

	});

});